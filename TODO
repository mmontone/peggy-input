- Improve completion of certain lists (for instance, completion of users and groups as user types. Hint: look at partialInput).
- Consider dropping JQuery and use native JS ?
- Completion data with ids? i.e. username + id
- Check performance for lots of completion candidates. ~10K
- Make completions list clickable.
- Get current status of the completion input via Javascript. error, result, etc.
- Better tuning of error status visually. Toggleable error message. Add CSS class to input field. Is there a way of marking an input element as invalid?

From Peggy docs:
> parsers can also support their own custom options. For example:

> const parser = peggy.generate(`
> {
>   // options are available in the per-parse initializer
>   console.log(options.validWords);  // outputs "[ 'boo', 'baz', 'boop' ]"
> }

> validWord = @word:$[a-z]+ &{ return options.validWords.includes(word) }
> `);

> const result = parser.parse("boo", {
>   validWords: [ "boo", "baz", "boop" ]
> });

> console.log(result);  // outputs "boo"